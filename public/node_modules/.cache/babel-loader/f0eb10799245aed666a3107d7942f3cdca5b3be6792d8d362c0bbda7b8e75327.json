{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\archi\\\\Documents\\\\tommyWestphallProject\\\\src\\\\App.js\";\nimport logo from './logo.svg';\nimport './App.css';\nimport React, { useEffect, useRef } from 'react';\nimport { ReactFlow, Controls, Background, ReactFlowInstance, BackgroundVariant } from '@xyflow/react';\n// import ReactFlow, { useNodesState, useEdgesState, ReactFlowInstance } from 'react-flow-renderer';\n// import { ReactFlowInstance } from 'react-flow-renderer';\nimport '@xyflow/react/dist/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst edges = [{\n  id: '1-2',\n  source: '1',\n  target: '2'\n}];\nconst nodes = [{\n  id: '1',\n  // required\n  position: {\n    x: 100,\n    y: 100\n  },\n  // required\n  data: {\n    label: 'Hello'\n  },\n  // required\n  type: 'input'\n}, {\n  id: '2',\n  // required\n  position: {\n    x: 200,\n    y: 200\n  },\n  // required\n  data: {\n    label: 'banana'\n  } // required\n}];\nconst onLoad = reactFlowInstance => {\n  reactFlowInstance.fitView();\n};\nfunction Flow() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"graph-playground-div\",\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      colorMode: \"dark\",\n      edges: edges,\n      onInit: instance => setTimeout(() => instance.fitView(), 0),\n      onLoad: instance => setTimeout(() => instance.fitView(), 0),\n      children: [/*#__PURE__*/_jsxDEV(Background, {\n        color: \"#FF0000\",\n        variant: BackgroundVariant.Dot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_c = Flow;\nexport default Flow;\nvar _c;\n$RefreshReg$(_c, \"Flow\");","map":{"version":3,"names":["logo","React","useEffect","useRef","ReactFlow","Controls","Background","ReactFlowInstance","BackgroundVariant","jsxDEV","_jsxDEV","edges","id","source","target","nodes","position","x","y","data","label","type","onLoad","reactFlowInstance","fitView","Flow","className","children","colorMode","onInit","instance","setTimeout","color","variant","Dot","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/archi/Documents/tommyWestphallProject/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, { useEffect, useRef } from 'react';\nimport { ReactFlow, Controls, Background, ReactFlowInstance, BackgroundVariant } from '@xyflow/react';\n// import ReactFlow, { useNodesState, useEdgesState, ReactFlowInstance } from 'react-flow-renderer';\n// import { ReactFlowInstance } from 'react-flow-renderer';\nimport '@xyflow/react/dist/style.css';\n\nconst edges = [{ id: '1-2', source: '1', target: '2' }];\n\nconst nodes = [\n  {\n    id: '1', // required\n    position: { x: 100, y: 100 }, // required\n    data: { label: 'Hello' }, // required\n    type: 'input',\n  },{\n    id: '2', // required\n    position: { x: 200, y: 200 }, // required\n    data: { label: 'banana' }, // required\n  },\n];\n \nconst onLoad = (reactFlowInstance) => {\n  reactFlowInstance.fitView();\n}\n\nfunction Flow() {\n  return (\n    <div className=\"graph-playground-div\">\n      <ReactFlow nodes={nodes}\n      colorMode=\"dark\"\n      edges={edges}\n      onInit={(instance) => setTimeout(() => instance.fitView(), 0)}\n      onLoad={(instance) => setTimeout(() => instance.fitView(), 0)}>\n      <Background color=\"#FF0000\" variant={BackgroundVariant.Dot} />\n      <Controls />\n      </ReactFlow>\n    </div>\n  );\n}\n \nexport default Flow;"],"mappings":";AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,OAAOC,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,iBAAiB,EAAEC,iBAAiB,QAAQ,eAAe;AACrG;AACA;AACA,OAAO,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,KAAK,GAAG,CAAC;EAAEC,EAAE,EAAE,KAAK;EAAEC,MAAM,EAAE,GAAG;EAAEC,MAAM,EAAE;AAAI,CAAC,CAAC;AAEvD,MAAMC,KAAK,GAAG,CACZ;EACEH,EAAE,EAAE,GAAG;EAAE;EACTI,QAAQ,EAAE;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE;EAAI,CAAC;EAAE;EAC9BC,IAAI,EAAE;IAAEC,KAAK,EAAE;EAAQ,CAAC;EAAE;EAC1BC,IAAI,EAAE;AACR,CAAC,EAAC;EACAT,EAAE,EAAE,GAAG;EAAE;EACTI,QAAQ,EAAE;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE;EAAI,CAAC;EAAE;EAC9BC,IAAI,EAAE;IAAEC,KAAK,EAAE;EAAS,CAAC,CAAE;AAC7B,CAAC,CACF;AAED,MAAME,MAAM,GAAIC,iBAAiB,IAAK;EACpCA,iBAAiB,CAACC,OAAO,CAAC,CAAC;AAC7B,CAAC;AAED,SAASC,IAAIA,CAAA,EAAG;EACd,oBACEf,OAAA;IAAKgB,SAAS,EAAC,sBAAsB;IAAAC,QAAA,eACnCjB,OAAA,CAACN,SAAS;MAACW,KAAK,EAAEA,KAAM;MACxBa,SAAS,EAAC,MAAM;MAChBjB,KAAK,EAAEA,KAAM;MACbkB,MAAM,EAAGC,QAAQ,IAAKC,UAAU,CAAC,MAAMD,QAAQ,CAACN,OAAO,CAAC,CAAC,EAAE,CAAC,CAAE;MAC9DF,MAAM,EAAGQ,QAAQ,IAAKC,UAAU,CAAC,MAAMD,QAAQ,CAACN,OAAO,CAAC,CAAC,EAAE,CAAC,CAAE;MAAAG,QAAA,gBAC9DjB,OAAA,CAACJ,UAAU;QAAC0B,KAAK,EAAC,SAAS;QAACC,OAAO,EAAEzB,iBAAiB,CAAC0B;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9D5B,OAAA,CAACL,QAAQ;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV;AAACC,EAAA,GAbQd,IAAI;AAeb,eAAeA,IAAI;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}